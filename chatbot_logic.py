from sentence_transformers import SentenceTransformer, util

# Pre-trained sentence embedding model
model = SentenceTransformer('all-MiniLM-L6-v2')

# Custom training examples (expand this as you go)
training_data = [
    {"input": "I feel nervous about an interview", "response": "Itâ€™s normal to feel nervous. Letâ€™s practice some calming techniques together."},
    {"input": "Iâ€™m feeling down today", "response": "Iâ€™m sorry youâ€™re feeling down. Want to share whatâ€™s on your mind?"},
    {"input": "Iâ€™m lonely even when Iâ€™m with people", "response": "That sounds really tough. Iâ€™m here to listen whenever you need."},
    {"input": "Iâ€™m scared of failing", "response": "Fear of failure is common. Remember, itâ€™s part of learning and growing."},
    {"input": "I feel like crying but canâ€™t", "response": "Sometimes emotions get stuck. Itâ€™s okay, Iâ€™m here to support you."},
    {"input": "Iâ€™m worried about my family", "response": "Family concerns can be heavy. Want to talk about whatâ€™s worrying you?"},
    {"input": "I feel disconnected from everyone", "response": "Feeling disconnected is hard. Youâ€™re not alone, and Iâ€™m here with you."},
    {"input": "Iâ€™m frustrated with myself", "response": "Being hard on yourself happens. Letâ€™s focus on the progress youâ€™ve made."},
    {"input": "I donâ€™t feel motivated", "response": "Motivation can come and go. Want to try some small goals together?"},
    {"input": "I feel like nobody cares", "response": "I care, and Iâ€™m here to listen anytime you want to talk."},
    {"input": "Iâ€™m anxious about a deadline", "response": "Deadlines can be stressful. Want some tips to manage your time?"}, 
    {"input": "Iâ€™m feeling grateful for my friends", "response": "Thatâ€™s beautiful! Friends can be a great support."},
    {"input": "Iâ€™m feeling confused about my future", "response": "The future can feel uncertain. Letâ€™s take it step by step."},
    {"input": "Iâ€™m feeling hopeless about everything", "response": "Iâ€™m really sorry youâ€™re feeling this way. You donâ€™t have to go through this alone."},
    {"input": "I want to feel calm", "response": "Letâ€™s try a relaxation exercise together."},
    {"input": "Iâ€™m angry at someone", "response": "Itâ€™s okay to feel angry. Want to talk about what happened?"},
    {"input": "Iâ€™m worried Iâ€™m not good enough", "response": "You are enough just as you are. Letâ€™s explore these feelings."},
    {"input": "Iâ€™m feeling restless", "response": "Restlessness can be tough. How about a quick mindfulness exercise?"},
    {"input": "I feel overwhelmed with work", "response": "Work stress can pile up. Want help organizing your tasks?"}, 
    {"input": "Iâ€™m feeling hopeful about a new opportunity", "response": "Thatâ€™s exciting! Whatâ€™s making you feel hopeful?"},
    {"input": "I feel like giving up on my goals", "response": "Itâ€™s normal to feel that way sometimes. Iâ€™m here to support you."},
    {"input": "Iâ€™m feeling anxious and canâ€™t concentrate", "response": "That sounds hard. Letâ€™s try a grounding technique together."},
    {"input": "Iâ€™m struggling to stay positive", "response": "Itâ€™s okay to struggle. Small steps can make a difference."},
    {"input": "Iâ€™m scared of being judged", "response": "Fear of judgment is common. Youâ€™re safe here with me."},
    {"input": "Iâ€™m feeling guilty about something", "response": "Guilt can weigh heavy. Want to talk about it?"},
    {"input": "Shall I share what is wrong", "response": "Of course. Iâ€™m here to listen whenever you're ready."},
    {"input": "I want to share what happened", "response": "Please go ahead. I'm listening with care."},
    {"input": "Can I share something with you?", "response": "Yes, absolutely. Iâ€™m here for you."},
    {"input": "Can I tell you what happened?", "response": "Of course. I'm here to listen."},
    {"input": "Is it okay if I talk?", "response": "Yes, take your time. I'm right here with you."}

]

conversation_history = []

# Encode all input sentences
input_texts = [item['input'] for item in training_data]
input_embeddings = model.encode([item["input"] for item in training_data], convert_to_tensor=True)

def generate_reply(user_input):
    global conversation_history
    conversation_history.append(user_input)

    # Context-aware short-term memory logic
    if len(conversation_history) >= 2:
        last_msg = conversation_history[-2].lower()
        current_msg = user_input.lower()

        follow_up_intents = [
            "can i share", "can i tell", "shall i tell", "shall i share", "can i talk"
        ]
        if any(phrase in last_msg for phrase in follow_up_intents) and current_msg in ["yes", "yeah", "sure", "go ahead"]:
            return "Go ahead, Iâ€™m listening."

        if current_msg in ["no let me share", "first let me share"]:
            return "Sure, take your time. Iâ€™m listening."

    # Fallback: semantic similarity
    user_embedding = model.encode(user_input, convert_to_tensor=True)
    similarities = util.cos_sim(user_embedding, input_embeddings)[0]
    best_match_idx = similarities.argmax()
    return training_data[best_match_idx]['response']


# === Example Chat Session ===
if __name__ == "__main__":
    print("ðŸ¤– PsyBot: Hi, Iâ€™m here for you. How are you feeling today?")
    while True:
        user_input = input("You: ")
        if user_input.lower() in ["exit", "quit"]:
            print("ðŸ¤– PsyBot: Take care. I'm here whenever you need me.")
            break
        reply = generate_reply(user_input)
        print(f"ðŸ¤– PsyBot: {reply}")
